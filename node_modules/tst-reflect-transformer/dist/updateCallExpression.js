"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.updateCallExpression = void 0;
const ts = require("typescript");
function updateCallExpression(node, state, typeArgumentsTypes) {
    const callArgs = [...node.arguments];
    if (callArgs.length < state.declaredParametersCount) {
        for (let i = state.declaredParametersCount - callArgs.length; i > 0; --i) {
            callArgs.push(ts.factory.createIdentifier("undefined"));
        }
    }
    const args = [];
    for (let param of typeArgumentsTypes) {
        if (param.genericTypeName === undefined)
            continue;
        if (param.reflectedType === undefined)
            continue;
        args.push(ts.factory.createPropertyAssignment(param.genericTypeName, param.reflectedType));
    }
    return ts.factory.updateCallExpression(node, node.expression, node.typeArguments, [
        ...callArgs,
        ts.factory.createObjectLiteralExpression(args)
    ]);
}
exports.updateCallExpression = updateCallExpression;
//# sourceMappingURL=updateCallExpression.js.map