"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.createValueExpression = void 0;
const ts = require("typescript");
const helpers_1 = require("./helpers");
function createValueExpression(value) {
    if (value != undefined) {
        if (typeof value == "string") {
            return ts.factory.createStringLiteral(value);
        }
        if (typeof value == "number") {
            return ts.factory.createNumericLiteral(value.toString());
        }
        if (typeof value == "boolean") {
            return value ? ts.factory.createTrue() : ts.factory.createFalse();
        }
        if (value instanceof Array) {
            return ts.factory.createArrayLiteralExpression(value.map(val => createValueExpression(val)));
        }
        if (value.constructor == Object) {
            let propertyAssignments = [];
            for (let prop in value) {
                if (value.hasOwnProperty(prop) && value[prop] !== undefined) {
                    propertyAssignments.push(ts.factory.createPropertyAssignment(prop, createValueExpression(value[prop])));
                }
            }
            return ts.factory.createObjectLiteralExpression(propertyAssignments);
        }
        if ((0, helpers_1.isExpression)(value)) {
            return value;
        }
    }
    return ts.factory.createNull();
}
exports.createValueExpression = createValueExpression;
//# sourceMappingURL=createValueExpression.js.map