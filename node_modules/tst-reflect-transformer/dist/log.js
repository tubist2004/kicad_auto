"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.log = exports.Logger = exports.LogLevel = exports.color = void 0;
const helpers_1 = require("./helpers");
exports.color = {
    yellow: 33,
    red: 31,
    blue: 34,
    magenta: 35,
    cyan: 36,
    gray: 90
};
var LogLevel;
(function (LogLevel) {
    LogLevel["Trace"] = "TRA";
    LogLevel["Info"] = "INF";
    LogLevel["Warning"] = "WRN";
    LogLevel["Error"] = "ERR";
    LogLevel["Debug"] = "DBG";
})(LogLevel = exports.LogLevel || (exports.LogLevel = {}));
class Logger {
    constructor(context) {
        this.contextSuffix = context ? "\n\tIn " + context : "";
    }
    log(level, color, ...args) {
        if (color) {
            console.log.apply(undefined, [`\x1b[${color}m[${level}] ${helpers_1.PACKAGE_ID}:`, ...args, this.contextSuffix, "\x1b[0m"]);
        }
        else {
            console.log.apply(undefined, [`[${level}] ${helpers_1.PACKAGE_ID}:`, ...args, this.contextSuffix]);
        }
    }
    info(...args) {
        this.log(LogLevel.Info, undefined, ...args);
    }
    trace(...args) {
        this.log(LogLevel.Trace, exports.color.gray, ...args);
    }
    warn(...args) {
        this.log(LogLevel.Warning, exports.color.yellow, ...args);
    }
    error(...args) {
        this.log(LogLevel.Error, exports.color.red, ...args);
    }
    debug(...args) {
        this.log(LogLevel.Debug, exports.color.magenta, ...args);
    }
}
exports.Logger = Logger;
exports.log = new Logger();
//# sourceMappingURL=log.js.map