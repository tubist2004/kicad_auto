"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.getMetadataStore = void 0;
const InlineMetadataStore_1 = require("./InlineMetadataStore");
const NodeProcessMetadataStore_1 = require("./NodeProcessMetadataStore");
const WindowMetadataStore_1 = require("./WindowMetadataStore");
__exportStar(require("./MetadataStore"), exports);
__exportStar(require("./InlineMetadataStore"), exports);
__exportStar(require("./WindowMetadataStore"), exports);
__exportStar(require("./NodeProcessMetadataStore"), exports);
// Default store
InlineMetadataStore_1.InlineMetadataStore.initiate();
/**
 * Function used in transformer templates for metadata files.
 * @return {MetadataStore}
 */
function getMetadataStore() {
    if (typeof process !== "undefined") {
        return NodeProcessMetadataStore_1.NodeProcessMetadataStore.get();
    }
    if (typeof window !== "undefined") {
        return WindowMetadataStore_1.WindowMetadataStore.get();
    }
    throw new Error(`Failed to initialize a store for your environment, the global "process" and "window" vars aren't available.`);
}
exports.getMetadataStore = getMetadataStore;
