"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.IntersectionTypeBuilder = void 0;
const enums_1 = require("../enums");
const Type_1 = require("../Type");
const TypeBuilderBase_1 = require("./TypeBuilderBase");
class IntersectionTypeBuilder extends TypeBuilderBase_1.TypeBuilderBase {
    constructor() {
        super(...arguments);
        this.types = new Set();
    }
    /**
     * Add types to union
     * @param types
     */
    addTypes(...types) {
        for (let type of types) {
            this.types.add(type);
        }
        return this;
    }
    /**
     * @inheritDoc
     */
    build() {
        const types = Array.from(this.types);
        // Intersection of primitive types is not possible
        if (types.some(t => t.isPrimitive())) {
            return Type_1.Type.Never;
        }
        return Type_1.Type.store.wrap({
            k: enums_1.TypeKind.Container,
            n: this.typeName,
            fn: this.fullName,
            inter: true,
            types: types
        });
    }
}
exports.IntersectionTypeBuilder = IntersectionTypeBuilder;
