"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.FunctionInfo = void 0;
const Type_1 = require("../Type");
const parameter_1 = require("./parameter");
/**
 * Function details.
 */
class FunctionInfo {
    /**
     * Internal FunctionInfo constructor.
     * @internal
     */
    constructor(description) {
        var _a, _b;
        this._parameters = ((_a = description.params) === null || _a === void 0 ? void 0 : _a.map(param => new parameter_1.Parameter(param))) || [];
        this._typeParameters = ((_b = description.tp) === null || _b === void 0 ? void 0 : _b.map(t => new Type_1.LazyType(t))) || [];
        this._returnType = new Type_1.LazyType(description.rt);
    }
    /**
     * Return type of this function.
     */
    get returnType() {
        return this._returnType.type;
    }
    /**
     * Get list of parameters.
     */
    getParameters() {
        return this._parameters.slice();
    }
    /**
     * Get list of generic type parameter.
     * @return {Array<Type>}
     */
    getTypeParameters() {
        return this._typeParameters.map(tp => tp.type);
    }
}
exports.FunctionInfo = FunctionInfo;
